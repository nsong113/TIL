'use strict';

//console.log(document.querySelector('.message').textContent);
//.textContent: HTML ÏöîÏÜåÏùò ÌÖçÏä§Ìä∏ ÎÇ¥Ïö©ÏùÑ ÎÇòÌÉÄÎÉÖÎãàÎã§. Ï¶â, Ïõπ ÌéòÏù¥ÏßÄÏóêÏÑú ÌäπÏ†ï HTML ÏöîÏÜå ÏïàÏóê ÏûàÎäî ÌÖçÏä§Ìä∏ ÎÇ¥Ïö©ÏùÑ Í∞ÄÏ†∏Ïò§Í±∞ÎÇò Î≥ÄÍ≤ΩÌïòÎäî Îç∞ ÏÇ¨Ïö©Îê©ÎãàÎã§. DOM (Document Object Model) ÏöîÏÜåÏóê Ï†ëÍ∑ºÌïòÍ≥† ÌÖçÏä§Ìä∏ ÎÇ¥Ïö©ÏùÑ Îã§Î£®Í∏∞ ÏúÑÌï¥ ÏÇ¨Ïö©ÎêòÎäî ÏÜçÏÑ±

//DOM manipulation
// document.querySelector('.message').textContent = 'üòç Correct Number!';

// document.querySelector('.number').textContent = 13;
// document.querySelector('.score').textContent = 10;

// document.querySelector('.guess').value = 23;
// console.log(document.querySelector('.guess').value);

//EVENT: event is sth that happens on the page. click, moving, key press->eventlistener: react + eventhandler(function, eventlisterÍ∞Ä Î≠ò Ìï†ÏßÄ)
//.addEventlisten('Ïñ¥Îñ§ Ïù¥Î≤§Ìä∏',event handler_function(){Ïù¥Î≤§Ìä∏ Í≤∞Í≥º})
//Ïù¥Îïå functionÏùÄ Ïù¥Î≤§Ìä∏Í∞Ä ÏùºÏñ¥ÎÇ¨ÏùÑÎïå callÎêúÎã§. Í∑∏ÎûòÏÑú Îî∞Î°ú callÌï† ÌïÑÏöî ÏóÜÏùå

let secretNumber = Math.trunc(Math.random() * 20) + 1;

let score = 20;
let highscore = 0;

const displayMessage = function (message) {
  document.querySelector('.message').textContent = message;
};

document.querySelector('.check').addEventListener('click', function () {
  const guess = Number(document.querySelector('.guess').value);
  console.log(guess, typeof guess);

  if (!guess) {
    //when there is no input
    displayMessage(' üëª No Number!');

    //when player wins
  } else if (guess === secretNumber) {
    displayMessage('üê∂ Correct Number!');
    document.querySelector('body').style.backgroundColor = '#60b347';
    document.querySelector('.number').style.width = '30rem';
    document.querySelector('.number').textContent = secretNumber;

    //highscore
    if (score > highscore) {
      document.querySelector('.highscore').textContent = score;
    }

    //when the guess is wrong
  } else if (guess !== secretNumber) {
    displayMessage(
      guess > secretNumber
        ? 'üêπ The number is too high!'
        : 'üëª The number is too low'
    );

    score--;
    document.querySelector('.score').textContent = score;
  } else {
    displayMessage('You LOST the game');

    //when the guess is too high
  } //else if (guess > secretNumber) {
  //     if (score > 0) {
  //       document.querySelector('.message').textContent =
  //         'üêπ The number is too high!';
  //       score--;
  //       document.querySelector('.score').textContent = score;
  //     } else {
  //       document.querySelector('.message').textContent = 'You LOST the game';
  //     }

  //     //when the guess is too low
  //   } else if (guess < secretNumber) {
  //     if (score > 0) {
  //       document.querySelector('.message').textContent =
  //         'üëª The number is too low';
  //       score--;
  //       document.querySelector('.score').textContent = score;
  //     } else {
  //       document.querySelector('.message').textContent = 'You LOST the game';
  //     }
  //   }
});

//addEventListener=methodÎùºÏÑú () ÌïÑÏöî

//challenge
//implement a game rest functionality, so that the player can make a new guess! here is how!

//1. select the element withe the 'again' class and attach a click event handler
//2. in the handler function, restore initial values of the score and number variables
//3. restore the initial conditions of the message, number, score and guess input field.
//4. also restore the original background color(#222) and number width (15rem).
document.querySelector('.again').addEventListener('click', function () {
  document.querySelector('.guess').value = '';
  score = 20;
  secretNumber = Math.trunc(Math.random() * 20) + 1;
  displayMessage('Start guessing...');

  document.querySelector('.score').textContent = score;
  document.querySelector('.number').textContent = '?';

  document.querySelector('.number').style.width = '15rem';
  document.querySelector('body').style.backgroundColor = '#222';
});

//refactoring- eliminate duplicate code
